一.配置环境
 1.python 2.7.6+
 2.第三方库 BeautifulSoup4，mechanize
 
二.使用
 1.需要为程序提供三个参数（顺序不可变） 
     a.可用源服务器的URL 如： http://www.subituweb.com/nettools/traceroute.php
     b.目的IP  如： 202.118.236.175
     C.该网站的服务器代号 如：0	（因为一个网站可能包含多个源服务器，如果只有一个源服务器，那么该参数只能是0，如果有n个源服务器，那么该参数可以是1～n）
   运行示例： python ＊.py http://www.subituweb.com/nettools/traceroute.php 202.118.236.175 0 
 2.程序详解
     (1)类gettrace()先将基本参数载入到程序中，如目的IP，源服务器信息，再将参数初始化，读入配置文件信息，配置文件主要是用来筛选参数的正则匹配式。
     (2)Readinfo()函数主要是读取源服务器的配置信息，每个服务器的参数个数和列表不尽相同，服务器配置载入到全局变量self.tags中，然后再将特殊的源服务器配置载入
      到全局变量self.speciallist中，根据配置参数中function选择合适的函数进行解析然后发送traceroute。
     (3)MechanizeForm()函数是通过第三方库mechanize直接爬取网站内容
        a.根据self.tags中是否有有效的frame／iframe标签判断我们关注的内容是否在子网页中，接着剔除无效表单并解析有效表单。
	b.分析的内容包括提交方式（POST/GET），提交到哪个地方(action)
	c.然后提取input标签中有效内容，input有效标签name可能是text/textfield/submit/radio/checkbox/button,除text/textfield以外的标签，匹配成功这个标签值  
        一定已经在全局变量self.tags中，不在self.tags中的值都无法匹配成功（text/textfield标签都是用来输入目的IP，所以不写固定配置）
	d.解析了全部的input标签之后，继续解析select标签，对于只包含一个源服务器的网站，每个select标签中最多只有一个option值是有效的。对于包含多个源服务器的
	网站，服务器的列表就在某个select标签中，根据self.tags中的select参数找到服务器列表，选择指定的源服务器（也有少数网站的源服务器列表在checkbox标签中）,
        至此，所有的提交到后台的参数都解析完成且存到全局变量self.list中
     (4)UrllibForm()函数是通过python标准库urllib2来爬取网站内容，在爬取之前我们还加了headers来模拟浏览器行为，解析的过程和MechanizeForm()中几乎一致,需要说
	明的是，有个别网站需要二次提交参数，第一次提交的参数不是traceroute参数但是却必须要做，此时self.finish依然是0，重新提交一次参数即可。
     (5)DirectMechanize()函数是直接用Mechanize库打开url并将目的IP直接添在网站URL后提交
     (6)DirectRequest()函数是直接用Request请求打开url并将目的IP直接添在网站URL后提交
     (7)NotInForm()函数是用来解析一些参数不在Form表单中的函数，MechanizeForm()和UrllibForm()中的参数都在Form表单之内，所以此时input标签的参数解析应当在Form
	表单之外，而且对于包含多个服务器的网站，服务器的列表可能在Script代码中，也可能在Form表单外的option中。
     (8)在show()函数之前，所有的参数解析都已经完成，show()函数发送traceroute命令到后台且提取结果
	a.根据提交方式把参数列表整合提交到后台
	b.判断结果是否在子网页中
        c.根据配置文件中的结果的HTML标签提取traceroute原始数据并保存
        d.从原始数据中对每一条结果进行解析，提取出有向路径并打印出来。
     (9)函数main()从sys读取参数加载到gettrace中
     (10)最后设置了程序运行的有效时间是600s.
 3.常见问题：
     (1)程序报错：某些模块未定义
	请确认第三方库是否都正确安装且可以正常使用
     (2)程序报错：配置文件中无该服务器配置（如：No section:'www.subituweb.com'）
	配置文件中未包括该网站的配置，请更换可使用的网站，如果必须使用该网站（手动添加配置文件或者使用监测程序自动添加配置文件）
     (3)程序运行正常结束但没有任何traceroute结果，请依次尝试如下解决方案：
	a.源服务器设置了使用时间间隔，请等待一定的时间再使用该源服务器
        b.程序的存活时间是10分钟，可以尝试调整更长的存活时间（位于程序的最后位置 signal.alarm(600)，如果调整更长的时间还是无结果则应当放弃这种方案）
        c.该源服务器配置发生改变，需更新配置文件
     (4)服务器连接失败：
	我们提供的源服务器都是来自第三方机构，可能会出现服务器维护或者网络不稳定的情况，暂时无法使用
     (5)程序运行正常结束且有traceroute的结果但是程序显示的traceroute结果明显不对：
	程序显示的traceroute结果是从原始数据中提取的，请直接从原始数据查看中traceroute结果是否正确（第三方库不同的版本可能在解析HTML生产文档树时有一些差别，
	所以在不同的机器中从原始数据提取结果可能出现显示错误）
     (6)提示配置文件中没有'split'模块：
	从原始数据中提取有限路径的过程中需要二次分割字符串，根据原始数据的内容在该服务器配置中添加一个合适分割字符即可
  4.添加一个新的服务器配置，可以使用半自动检测程序添加，如果无效则手动添加：
     (1)首先应该要明确提交到后台的参数有哪些，可以通过直接捕获提交到后台的数据包分析，或者借助第三方工具截获。
     (2)查看网页源代码，找到需要提交的参数的标签，对比其他的源服务器配置就知道哪些参数需要写到配置文件中
     (3)如果你已经确定所有的参数配置都已经写入配置文件中，接下来确定用哪个函数：
	a.如果我们在浏览器中看到通过GET直接提交到后台且只有参数只有目的IP，应当考虑用DirectMechanize()或者DirectRequest()
	b.否则我们尝试MechanizeForm()，如果打开失败则用UrllibForm()
	c.如果有参数在Form表单外，则用NotInForm()
     (4)运行程序，如果程序显示正确的tracroute结果说明成功了，否则按照接下来的步骤分析
     (5)先确定有没有生成结果，如果生成了原始数据且原始数据中有正确的结果，那么就是在原始数据中提取有向路径的过程有问题，分析原始数据提取出有向路径的过程即可，
	或者直接从原始数据中提取有效信息（说明提交到后台的参数配置没有问题）,否则继续分析
     (6)如果self.list中的参数列表和从浏览器中直接截获的参数列表不一样，在该服务器所用的函数中找到该参数的标签的位置，分析原因：
	a.配置文件中写错或者没写该标签的配置
	b.不同的标签混淆了配置
	c.该标签不是固定值，需要动态获取（此时配置文件中应该用Dynamic来标识）
	d.该标签不在Form表单中，重新检查函数是否用错
     (7)如果self.list中的参数列表是否和浏览器截获的参数列表一样，分析原因：
	a.存在子网页，结果在子网页中，对于这种情况，我们需要查看网页结果源代码中结果是否在子网页中，如果有则将该服务器添加到SpecialServer中的Iframe或者是Frame
	中，根据子网页所在的标签确定即可；
	b.提交到后台的方式在网页源代码中写的是POST，但是实际是GET提交才有效；
	c.如果是GET方式提交到后台，那么请仔细对比通过浏览器截获的提交到后台的URL和程序里组建的URL(self.tmpurl)是否一致，如果不一致，就改成一样尝试是否能够成功
     (8)跟踪程序，如果提交到后台URL已经一致，且后台返回结果，则可能是提取traceroute结果的HTML标签写错，尝试不同的标签看是否有正确的原始数据产生。
  5.如何修改一个已经存在的服务器配置
     (1)使用了半自动检测程序但是无法获得正确结果或者服务器所在的网站内容发生了改变
     (2)最简单的方式就是对比以前的参数设置，修改配置文件该网站的参数设置即可
     (3)如果网站结构发生了巨大变化则可以考虑当做一个新的网站来配置参数，具体方式可参考上一节方案

